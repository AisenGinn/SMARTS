FROM tensorflow/tensorflow:2.4.0-gpu

ARG DEBIAN_FRONTEND=noninteractive

# (Optional) Disable certificate verification
RUN touch /etc/apt/apt.conf.d/99verify-peer.conf && \
    echo >>/etc/apt/apt.conf.d/99verify-peer.conf "Acquire { https::Verify-Peer false }"

# Install dependencies
RUN apt-get update --fix-missing && \
    apt-get install -y \
        software-properties-common && \
    add-apt-repository -y ppa:deadsnakes/ppa && \
    add-apt-repository -y ppa:sumo/stable && \
    apt-get update &&  \
    apt-get install -y \
        libopencv-dev \
        libsm6 \
        libspatialindex-dev \
        libxext6 \
        libxrender-dev \
        nano \
        python3.7 \
        python3.7-dev \
        python3.7-tk \
        python3.7-venv \
        sumo \
        sumo-doc \
        sumo-tools \
        wget \
        x11-apps \
        xserver-xorg-video-dummy && \
    apt-get autoremove && \
    rm -rf /var/lib/apt/lists/*

# Update default python version
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.7 1

# Install pip
RUN wget https://bootstrap.pypa.io/get-pip.py -O get-pip.py && \
    python get-pip.py && \
    pip install --upgrade pip

# Setup DISPLAY
ENV DISPLAY :1
RUN wget -O /etc/X11/xorg.conf http://xpra.org/xorg.conf && \
    cp /etc/X11/xorg.conf /usr/share/X11/xorg.conf.d/xorg.conf

# Setup SUMO
ENV SUMO_HOME /usr/share/sumo

# Setup python virtual environment
ENV VIRTUAL_ENV=/src/venv
RUN python3.7 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"
RUN pip install --upgrade pip

# Install requirements.txt
COPY ./examples/gameOfTag/requirements.txt /tmp/requirements.txt
RUN pip install -r /tmp/requirements.txt

# Copy source files and install SMARTS
COPY . /src
WORKDIR /src
RUN pip install -e .[camera-obs]
# RUN scl scenario build-all ./scenarios

# For Envision
EXPOSE 8081
RUN echo "/usr/bin/Xorg " \
    "-noreset +extension GLX +extension RANDR +extension RENDER" \
    "-logfile ./xdummy.log -config /etc/X11/xorg.conf -novtswitch $DISPLAY &" >> ~/.bashrc
# Run Envision as a detached process
# RUN echo "scl envision start -s /scenarios/SMARTS-${BRANCH}/scenarios -p 8081 &" >> ~/.bashrc

SHELL ["/bin/bash", "-c", "-l"]
